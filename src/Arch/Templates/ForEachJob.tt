<#@ template language="C#" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="Helpers.ttinclude" #>

using System;

namespace Arch.Core;
<#
    for (var index = 1; index <= Amount; index++)
    {
        var generics = AppendGenerics(index);
        var getFirstElement = AppendGetFirstComponentFrom(index);
        var getComponents = AppendGetComponentsFromFirst(index);
        var insertParams = InsertGenericRefParams(index);
#>
public struct ForEachJob<<#= generics #>> : IChunkJob
{
    public ForEach<<#= generics #>> ForEach;

    public void Execute(ref Chunk chunk)
    {
        var chunkSize = chunk.Count;
        <#= Indent(getFirstElement, 8) #>
        foreach(var entityIndex in chunk)
        {
            <#= Indent(getComponents,12) #>
            ForEach(<#= insertParams #>);
        }
    }
}

<#
    }
#>

